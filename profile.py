import os
import time

import django
from django.core.files import File

import buttons
from const import bot
from registration import get_city

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'DavinCHBot.settings')
django.setup()


def edit_photo(message, chat_id, user):
    if message.content_type != 'photo':
        msg = bot.send_message(chat_id=chat_id, text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é')
        bot.register_next_step_handler(msg, edit_photo, chat_id, user)
    else:
        avatar_id = message.photo[-1].file_id
        file_info = bot.get_file(avatar_id)
        downloaded_file = bot.download_file(file_info.file_path)
        with open('photo.jpg', 'wb') as new_file:
            new_file.write(downloaded_file)
        user.avatar = File(open('photo.jpg', 'rb'))
        user.save(update_fields=['avatar'])
        msg = bot.send_message(chat_id=chat_id, text='–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞', reply_markup=None)
        bot.delete_message(chat_id=chat_id, message_id=msg.id)
        time.sleep(1.5)
        profile_menu(chat_id=chat_id, user=user)


def edit_city(message, chat_id, user):
    if message.content_type == 'text':
        city = message.text.lower()
        user.city = city
        user.save(update_fields=['city'])
        msg = bot.send_message(chat_id=chat_id, text='–ì–æ—Ä–æ–¥ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω', reply_markup=None)
        bot.delete_message(chat_id=chat_id, message_id=msg.id)
        time.sleep(1.5)
        profile_menu(chat_id=chat_id, user=user)
    elif message.content_type == 'location':
        city = get_city(message)
        user.city = city
        user.save(update_fields=['city'])
        msg = bot.send_message(chat_id=chat_id, text='–ì–æ—Ä–æ–¥ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω', reply_markup=None)
        bot.delete_message(chat_id=chat_id, message_id=msg.id)
        time.sleep(1.5)
        profile_menu(chat_id=chat_id, user=user)
    else:
        msg = bot.send_message(chat_id=chat_id,
                               text='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π',
                               reply_markup=buttons.send_locaton())
        bot.register_next_step_handler(msg, edit_city, chat_id, user)


def edit_description(message, chat_id, user):
    if message.content_type != 'text':
        msg = bot.send_message(chat_id=chat_id, text='–ù–∞–ø–∏—à–∏ –æ —Å–µ–±–µ(–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å)', reply_markup=buttons.skip())
        bot.register_next_step_handler(msg, edit_description, chat_id, user)
    else:
        description = message.text
        if description == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
            description = 'ü´¢ü§´'
        user.description = description
        user.save(update_fields=['description'])
        msg = bot.send_message(chat_id=chat_id, text='–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–µ', reply_markup=None)
        bot.delete_message(chat_id=chat_id, message_id=msg.id)
        time.sleep(1.5)
        profile_menu(chat_id=chat_id, user=user)


def edit_age(message, chat_id, user):
    if message.content_type != 'text':
        msg = bot.send_message(chat_id=chat_id, text='–ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç')
        bot.register_next_step_handler(msg, edit_age, chat_id, user)
    else:
        try:
            age = int(message.text)
            if age < 16:
                raise Exception
        except Exception:
            msg = bot.send_message(chat_id=chat_id, text='–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –±–æ–ª—å—à–µ 16')
            bot.register_next_step_handler(msg, edit_age, chat_id, user)
        else:
            user.age = age
            user.save(update_fields=['age'])
            msg = bot.send_message(chat_id=chat_id, text='–ü–æ–ª –ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω')
            bot.delete_message(chat_id=chat_id, message_id=msg.id)
            time.sleep(1.5)
            profile_menu(chat_id=chat_id, user=user)


def profile_menu(chat_id, user):
    text = f'{user.name}, {user.age}, {user.city}, {user.category}\n\n' \
           f'–û —Å–µ–±–µ: {user.description}'
    bot.send_photo(chat_id=chat_id, photo=user.avatar, caption=text, reply_markup=buttons.profile_menu())


def callback(data, chat_id, user):
    if len(data) == 0:
        profile_menu(chat_id, user)
    elif data[0] == 'photo':
        msg = bot.send_message(chat_id=chat_id, text='–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∫–æ—Ç–æ—Ä—É—é –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
                               reply_markup=None)
        bot.register_next_step_handler(msg, edit_photo, chat_id, user)
    elif data[0] == 'city':
        msg = bot.send_message(chat_id=chat_id,
                               text='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π',
                               reply_markup=buttons.send_locaton())
        bot.register_next_step_handler(msg, edit_city, chat_id, user)
    elif data[0] == 'description':
        msg = bot.send_message(chat_id=chat_id, text='–ù–∞–ø–∏—à–∏ –æ —Å–µ–±–µ(–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å)',
                               reply_markup=buttons.skip())
        bot.register_next_step_handler(msg, edit_description, chat_id, user)
    elif data[0] == 'age':
        msg = bot.send_message(chat_id=chat_id, text='–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?')
        bot.register_next_step_handler(msg, edit_age, chat_id, user)
